<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:hdp="http://www.springframework.org/schema/hadoop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
         http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop-2.1.xsd">
         
         <context:annotation-config/>
    <context:component-scan base-package="com.ingestion.job" />
  
   
  	 <bean id="uploadFileJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="name" value="UploadJob"/>
        <property name="description" value=" This is a Upload file Job"/>
        <property name="group" value="UploadJobGroup"/>
        <property name="jobClass"  value="com.ingestion.job.UploadFileJob"/>
        <property name="durability" value="true" />
   </bean>         

    <bean id="uploadFileJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="name" value="UploadFileJobTrigger"/>
        <property name="group" value="uploadFileJobTriggerGroup"/>
        <property name="jobDetail" ref="uploadFileJob"/>
        <property name="cronExpression" value="0 0/1 * * * ?"/>
         <property name="misfireInstruction" 
           value="#{T(org.quartz.CronTrigger).MISFIRE_INSTRUCTION_DO_NOTHING}"/>
      </bean>

  <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
        <list>
            <ref bean="uploadFileJobTrigger"/>
        </list>
    </property>
     <property name="configLocation" value="classpath:quartz.properties"/>
 
   </bean>   

 
 	<hdp:configuration id="hadoopConfiguration">
  
  	</hdp:configuration>
  	 
	
<!--  Pig template wires automatically to 'pigFactory'- --> 
<hdp:pig-factory/>
<hdp:pig-template />

<!--  
<hdp:hbase-configuration zk-quorum="localhost" zk-port="2181"> </hdp:hbase-configuration>
<bean id="htemplate" class="org.springframework.data.hadoop.hbase.HbaseTemplate" p:configuration-ref="hbaseConfiguration"/>
-->
<!-- 
 <hdp:pig-runner id="pigRunner" run-at-startup="true">
   <hdp:script>
		A = LOAD 'src/main/resources/Upload.csv' USING PigStorage() AS (name:chararray, age:int);
   </hdp:script>
</hdp:pig-runner>
 -->

<!-- 
<pig-factory exec-type="LOCAL" job-name="pig-script" xmlns="http://www.springframework.org/schema/hadoop">
  
   <script>
     A = LOAD 'src/main/resources/Upload.csv' USING PigStorage() AS (name:chararray, age:in);
		dump A;
   </script>
</pig-factory>
-->
<!-- 
<hdp:pig-tasklet id="pig-script">
<hdp:script>
raw_data = LOAD 'customer.csv' USING PigStorage(',') AS (custno:chararray,firstname:chararray,lastname:chararray,age:int,profession:chararray);
STORE raw_data INTO 'hbase://customers' USING org.apache.pig.backend.hadoop.hbase.HBaseStorage('customers_data:firstname customers_data:lastname customers_data:age customers_data:profession');

</hdp:script>
</hdp:pig-tasklet>
-->

</beans>